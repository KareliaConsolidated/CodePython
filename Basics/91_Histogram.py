# life_exp, the list containing data on the life expectancy for different countries in 2007.
life_exp = [43.828,
 76.423,
 72.301,
 42.731,
 75.32,
 81.235,
 79.829,
 75.635,
 64.062,
 79.441,
 56.728,
 65.554,
 74.852,
 50.728,
 72.39,
 73.005,
 52.295,
 49.58,
 59.723,
 50.43,
 80.653,
 44.74100000000001,
 50.651,
 78.553,
 72.961,
 72.889,
 65.152,
 46.462,
 55.322,
 78.782,
 48.328,
 75.748,
 78.273,
 76.486,
 78.332,
 54.791,
 72.235,
 74.994,
 71.33800000000002,
 71.878,
 51.57899999999999,
 58.04,
 52.947,
 79.313,
 80.657,
 56.735,
 59.448,
 79.406,
 60.022,
 79.483,
 70.259,
 56.007,
 46.38800000000001,
 60.916,
 70.19800000000001,
 82.208,
 73.33800000000002,
 81.757,
 64.69800000000001,
 70.65,
 70.964,
 59.545,
 78.885,
 80.745,
 80.546,
 72.567,
 82.603,
 72.535,
 54.11,
 67.297,
 78.623,
 77.58800000000002,
 71.993,
 42.592,
 45.678,
 73.952,
 59.44300000000001,
 48.303,
 74.241,
 54.467,
 64.164,
 72.801,
 76.195,
 66.803,
 74.543,
 71.164,
 42.082,
 62.069,
 52.90600000000001,
 63.785,
 79.762,
 80.204,
 72.899,
 56.867,
 46.859,
 80.196,
 75.64,
 65.483,
 75.53699999999998,
 71.752,
 71.421,
 71.688,
 75.563,
 78.098,
 78.74600000000002,
 76.442,
 72.476,
 46.242,
 65.528,
 72.777,
 63.062,
 74.002,
 42.56800000000001,
 79.972,
 74.663,
 77.926,
 48.159,
 49.339,
 80.941,
 72.396,
 58.556,
 39.613,
 80.884,
 81.70100000000002,
 74.143,
 78.4,
 52.517,
 70.616,
 58.42,
 69.819,
 73.923,
 71.777,
 51.542,
 79.425,
 78.242,
 76.384,
 73.747,
 74.249,
 73.422,
 62.698,
 42.38399999999999,
 43.487]
 import matplotlib.pyplot as plt

# Create histogram of life_exp data
plt.hist(life_exp)

# Display histogram
plt.show()

# In the previous exercise, you didn't specify the number of bins. By default, Python sets the number of bins to 10 in that case. The number of bins is pretty important. Too few bins will oversimplify reality and won't show you the details. Too many bins will overcomplicate reality and won't show the bigger picture.

# To control the number of bins to divide your data in, you can set the bins argument.

# That's exactly what you'll do in this exercise. You'll be making two plots here. The code in the script already includes plt.show() and plt.clf() calls; plt.show() displays a plot; plt.clf() cleans it up again so you can start afresh.

# Build histogram with 5 bins
plt.hist(life_exp, bins = 5)

# Show and clean up plot
plt.show()
plt.clf()

# Build histogram with 20 bins
plt.hist(life_exp, bins = 20)

# Show and clean up again
plt.show()
plt.clf()

life_exp1950 = [28.8,
 55.23,
 43.08,
 30.02,
 62.48,
 69.12,
 66.8,
 50.94,
 37.48,
 68.0,
 38.22,
 40.41,
 53.82,
 47.62,
 50.92,
 59.6,
 31.98,
 39.03,
 39.42,
 38.52,
 68.75,
 35.46,
 38.09,
 54.74,
 44.0,
 50.64,
 40.72,
 39.14,
 42.11,
 57.21,
 40.48,
 61.21,
 59.42,
 66.87,
 70.78,
 34.81,
 45.93,
 48.36,
 41.89,
 45.26,
 34.48,
 35.93,
 34.08,
 66.55,
 67.41,
 37.0,
 30.0,
 67.5,
 43.15,
 65.86,
 42.02,
 33.61,
 32.5,
 37.58,
 41.91,
 60.96,
 64.03,
 72.49,
 37.37,
 37.47,
 44.87,
 45.32,
 66.91,
 65.39,
 65.94,
 58.53,
 63.03,
 43.16,
 42.27,
 50.06,
 47.45,
 55.56,
 55.93,
 42.14,
 38.48,
 42.72,
 36.68,
 36.26,
 48.46,
 33.68,
 40.54,
 50.99,
 50.79,
 42.24,
 59.16,
 42.87,
 31.29,
 36.32,
 41.72,
 36.16,
 72.13,
 69.39,
 42.31,
 37.44,
 36.32,
 72.67,
 37.58,
 43.44,
 55.19,
 62.65,
 43.9,
 47.75,
 61.31,
 59.82,
 64.28,
 52.72,
 61.05,
 40.0,
 46.47,
 39.88,
 37.28,
 58.0,
 30.33,
 60.4,
 64.36,
 65.57,
 32.98,
 45.01,
 64.94,
 57.59,
 38.64,
 41.41,
 71.86,
 69.62,
 45.88,
 58.5,
 41.22,
 50.85,
 38.6,
 59.1,
 44.6,
 43.58,
 39.98,
 69.18,
 68.44,
 66.07,
 55.09,
 40.41,
 43.16,
 32.55,
 42.04,
 48.45]

 # Let's do a similar comparison. life_exp contains life expectancy data for different countries in 2007. You also have access to a second list now, life_exp1950, containing similar data for 1950. Can you make a histogram for both datasets?
 
 # Histogram of life_exp, 15 bins
plt.hist(life_exp, bins = 15)

# Show and clear plot
plt.show()
plt.clf()

# Histogram of life_exp1950, 15 bins
plt.hist(life_exp1950, bins = 15)

# Show and clear plot again
plt.show()
plt.clf()